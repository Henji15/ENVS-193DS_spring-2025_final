---
title: "ENVS-193DS-Final"
author: Max Tu
date: 6/11/25
format: html
toc: true
message: false # use this to make sure messages don't show up
warning: false # use this to make sure warnings don't show up
---

```{r}
library(tidyverse) # reading in packages
library(here)
library(gt)
library(flextable)
library(janitor)
library(readxl)
library(magick)
library(MuMIn)
library(DHARMa)

sst <- read.csv("C:/Users/tuthi/OneDrive/Documents/github/ENVS-193DS_spring-2025_final/data/SST_update2023.csv") # reading in data file for #2

nest_boxes <- read.csv("C:/Users/tuthi/OneDrive/Documents/github/ENVS-193DS_spring-2025_final/data/occdist.csv") # reading in data file for #3
```

# 1. Research writing

## a. Transparent statistical methods

\[In part 1, they used a correlation test. In part 2, they used an ANOVA test.\]

## b. More information needed

\[The first test would be Tukey Honestly Significantly Different (Tukey HSD) test. It compares which sources are actually different when you compare them (like the average nirogen laod (kg year\^-1). Another test would be calculating the effect size shows how much the grouping variable explains the response variable (how much the source explains the average nitrogen load (kg year\^-1))\]

## c. Suggestions for rewriting

\[In part 1, we found some correlation between distance from headwater (km) and annual total nitrogen load (kg year-1) (pearson's correlation test, r = correlaton coefficient, p = 0.03, $\alpha$ = significance level). For part 2, we found a difference ($\eta$\^2 = effect size) between sources in average nitrogen load (kg year-1) (one-way ANOVA , F(among groups df, within groups df) = test statistic, p = 0.02, $\alpha$ = significance level). On average, urban showed land \_\_ nitrogen load (kg year\^-1) (x kg \_\_, % confidence interval: \[lower bound, upper bound\] kg year\^-1) than atmospheric deposition (this can expanded for more variables).\]

# 2. Data Visualization

## a. Cleaning and summarizing

```{r}
clean_sst <- sst |> # creating a new dataframe
  clean_names() |> # cleaning up data frame
  filter(year(date) >= 2018 & year(date) <= 2023) |> # setting up the range of years that I want
  mutate(
    date = as.Date(date), # converts to date format in R
    year = year(date), # adds new column for year and extracts year part  from each date column
    month = month(date, label = TRUE, abbr = TRUE) # creates a new column for month and extracts month from date column, while abbreviating month name
  ) |>
  group_by(year, month) |> # pairs up the month and year together 
  summarise(mean_monthly_sst = mean(temp, na.rm = TRUE)) |> # calculate mean surface temperature for each month and year group, rename column
  mutate(year=factor(year)) # converts year column to factor for plotting
```

```{r}
slice_sample(clean_sst, n = 5) # showing 5 random rows from dataset
str(clean_sst)

```

## b. Visualize the data

```{r}
graph <- ggplot(data = clean_sst, # choosing the data frame
       aes(x = month, # selecting month data as x-axis
           y = mean_monthly_sst, # selecting mean_monthly_sst as y axis
        color = year, # assign color to year
        shape = year, # assign shape to year
        group = year)) + # assign group to year
  geom_point (shape = 16) + # plot mean_monthly_sst and establish size and shape
  geom_line() + # plot the lines
  scale_color_manual(
    name = "Year", # renaming the legend title
    values = c("2018" = "#FFC000", "2019" = "#FF9666", "2020" = "#FB6A4A", "2021" = "#DE2D26", "2022" = "#A50F15", "2023" = "#660000")) + # creating custom colors for the years group
  theme(
    panel.background = element_blank(), # make panel background blank
    panel.border = element_rect(color = "gray", fill = NA, linewidth = 1), # creating a panel border around the graph
    legend.position = c(0.12, 0.95), # values set for adjusting the margins of legend
    legend.justification = c("right", "top")) + # setting up the type of margins to adjust for 
  labs(x = "Month", # name x-axis as Month
       y = r"[Mean monthly sea surface temperature (Â°C)]", # name y-axis as Total monthly rain (inches) 
      )

print(graph)
```

# 3. Data analysis

```{r echo = FALSE}
nest_boxes_clean <- nest_boxes |>
  clean_names() |>
  mutate(box_occupant = case_when(
      box_occupant == "swift parrot" ~ "sp",
      box_occupant == "common starling" ~ "cs",
      box_occupant == "tree martin" ~ "tm",
      box_occupant == "empty" ~ "e",
      TRUE ~ "other"  # optional fallback
    ))
  
```
## a. Response variable

\[The 1's indicate if that nest box was occupied by the bird of interest (besides the empty category, in which case being empty means 1). The 0's indicate if the nest box was empty or occupied by a bird that was not of interest (besides the empty category, which means it was occupied).\]

## b. Purpose of study

\[Swift parrots tended not to nest in the same place in successive seasons, leaving open boxes for competitors. Other species like the Common Starling preferred to nest in boxes closer to the forest edge, whereas that was the opposite for the Tree Martin.\]

## c. Difference in "seasons"

\[The seasons are the 2016 and 2019 summer breeding seasons for the Swift Parrots. The boxes were just deployed in 2016, whereas the boxes were established for three years by 2019, allowing us to compare how box age affects occupancy and competitors.\]

## d. Table of Models

| model number | season | distance to forest edge | model description |
|----|----|----|----|
| 0 |  |  | No predictors (null model) |
| 1 | X | X | Year + Distance (saturated model) |
| 2 | X |  | Year |
| 3 |  | X | Distance to forest edge |

# 4. Affective and exploratory visualizations

## a. Comparing visualizations

[The visualizations are different from how I represented my data originally. My initial visualization showed two box plots comparing steps on a short or long day (with median, Q1, Q3 shown), whereas my final visualization shows the steps throughout the quarter. I attach the different categories to my steps (extracurriculars, office hours, and food banks) and this was definitely more visual with icons being shown. There's not really much similarities between the two visualizations, as my affective visualization was more like a plot of my steps throughout the quarter with various icons. On the other hand, my exploratory visualization was more bland and just compared two box plots together. Based on my exploratory visualization, it appeared that my longer days tended to have more steps based on the median. I also noticed that in my affective visualization by looking at the average steps, although this was also influenced by whether or not I had extracurriculars as well. A feedback that I got was to put an icon for my screentime data, which I did by adding a clock icon. I also spaced out my data more.]


